version: '3.6'
services:
  postgres:
    image: postgres:12
    restart: always
    volumes:
    - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  graphql-engine:
    container_name: engine
    image: hasura/graphql-engine:v1.1.0
    expose:
      - "8080"
    depends_on:
    - "postgres"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # False to use CLI and handle migrations
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_JWT_SECRET: '{"type": "HS256", "key": "${JWT_KEY}"}'
      HASURA_GRAPHQL_ADMIN_SECRET: bestsecret
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
  auth:
    container_name: auth
    build: ./auth
    volumes:
      - ./auth:/app
    expose:
      - "8081"
    # entrypoint: ["sh", "-c", "sleep 2073600"]
    entrypoint: ["sh", "-c", "/start-reload.sh"]
    # command: ["python", "/app/main.py"]
    # entrypoint: ["sh", "-c", "/start.sh"]
    environment:
      JWT_KEY: ${JWT_KEY}
  proxy:
    container_name: proxy
    image: nginx
    volumes:
    - ./nginx/sites-enabled:/etc/nginx/sites-enabled
    - ./nginx/conf.d:/etc/nginx/conf.d
    - ./nginx/templates:/etc/nginx/templates
    ports:
    - "80:80"
    environment:
    - NGINX_HOST=localhost
    - NGINX_PORT=80
    depends_on:
      - auth
      - graphql-engine
    command: /bin/bash -c "envsubst < /etc/nginx/sites-enabled/server.template > /etc/nginx/sites-enabled/server.conf && exec nginx -g 'daemon off;'"
volumes:
  db_data:

